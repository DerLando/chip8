#![cfg_attr(not(feature = "std"), no_std)]

mod command;
pub mod config;
mod cpu;
mod display;
pub mod emulator;
mod io;
mod memory;
mod opcode;

#[cfg(test)]
mod test {
    use super::*;
    use std::io::Write;

    #[test]
    fn write_logo_rom() {
        #[rustfmt::skip]
        let rom: [u8;364] = [
            0x12, 0x08, // Jump to address 0x0208
            0b1110_0000,
            0b1110_0000, // A 3x3 filled square sprite at 0x0202
            0b1110_0000, 
            0,
            0b1100_0000,
            0b1100_0000, // A 2x2 filled square sprite as 0x0206 
            0xA2, 0x02, // 0x020C: Load address of 3x3 sprite into I
            0x60, 0x09, // 0x0208: Load x_pos of where to draw sprite into v0
            0x61, 0x02, // 0x020A: Load y_pos of topmost sprite row into v1
            0x62, 0x05,
            0x63, 0x08,
            0x64, 0x0B,
            0x65, 0x0E,
            // Finished setting up initial registers for CHIP8 Text drawing on top

            0xD0, 0x33, // 0x020E: Draw the loaded sprite at v0, v1 pos
            0x60, 0x0A,
            0xD0, 0x23, 
            0xD0, 0x43, 
            0x60, 0x0B,
            0xD0, 0x13, 
            0xD0, 0x53, 
            0x70, 0x03, // Add 3 to x register
            0xD0, 0x13, 
            0xD0, 0x53, 
            // Finished drawing letter C

            0x60, 0x13,
            0xD0, 0x13,
            0xD0, 0x23,
            0xD0, 0x33,
            0xD0, 0x43,
            0xD0, 0x53,
            0x70, 0x03,
            0xD0, 0x33,
            0x70, 0x03,
            0xD0, 0x13,
            0xD0, 0x23,
            0xD0, 0x33,
            0xD0, 0x43,
            0xD0, 0x53,
            // Finished drawing letter H

            0x70, 0x05,
            0xD0, 0x13,
            0xD0, 0x23,
            0xD0, 0x33,
            0xD0, 0x43,
            0xD0, 0x53,
            // Finished drawing letter I

            0x70, 0x05,
            0x6A, 0x04,
            0x6B, 0x07,
            0x6C, 0x09,
            0xD0, 0x13,
            0xD0, 0x23,
            0xD0, 0x33,
            0xD0, 0x43,
            0xD0, 0x53,
            0x70, 0x03,
            0xD0, 0x13,
            0xD0, 0xC3,
            0x70, 0x03,
            0xD0, 0xA3,
            0xD0, 0xB3,
            // Finished drawing letter P

            0x70, 0x05,
            0x6A, 0x03,
            0x6B, 0x06,
            0x6C, 0x0A,
            0x6D, 0x0D,
            0xD0, 0xA3,
            0xD0, 0xB3,
            0xD0, 0xC3,
            0xD0, 0xD3,
            0x70, 0x03,
            0xD0, 0x13,
            0xD0, 0x33,
            0xD0, 0x53,
            0x70, 0x03,
            0xD0, 0xA3,
            0xD0, 0xB3,
            0xD0, 0xC3,
            0xD0, 0xD3,
            // Finished drawing the 8

            0x60, 0x05,
            0x61, 0x12,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            0x70, 0x03,
            0xD0, 0x13,
            // Finish drawing the dividing line

            // Now we load the 2x2 sprite into memory to draw the name
            0xA2, 0x06, // 0x020C: Load address of 3x3 sprite into I
            0x60, 0x0E,                      
            0x61, 0x16,
            0x62, 0x18,
            0x63, 0x1A,
            0x64, 0x1C,
            0x6A, 0x17,
            0x6B, 0x19,
            0x6C, 0x1B,

            0xD0, 0x12,
            0xD0, 0x22,
            0xD0, 0x32,
            0xD0, 0x42,
            0x70, 0x02,
            0xD0, 0x42,
            0x70, 0x02,
            0xD0, 0x42,
            // Finish drawing the letter L

            0x70, 0x03,
            0xD0, 0x42,
            0x70, 0x01,
            0xD0, 0x32,
            0x70, 0x01,
            0xD0, 0x22,
            0x70, 0x01,
            0xD0, 0x12,
            0xD0, 0xC2,
            0x70, 0x01,
            0xD0, 0x22,
            0x70, 0x01,
            0xD0, 0x32,
            0x70, 0x01,
            0xD0, 0x42,
            // Finish drawing the letter A
            
            0x70, 0x03,
            0xD0, 0x12,
            0xD0, 0x22,
            0xD0, 0x32,
            0xD0, 0x42,
            0x70, 0x02,
            0xD0, 0xA2,
            0x70, 0x01,
            0xD0, 0xB2,
            0x70, 0x01,
            0xD0, 0xC2,
            0x70, 0x02,
            0xD0, 0x12,
            0xD0, 0x22,
            0xD0, 0x32,
            0xD0, 0x42,
            // Finish drawing the letter N

            0x70, 0x03,
            0xD0, 0x12,
            0xD0, 0x22,
            0xD0, 0x32,
            0xD0, 0x42,
            0x70, 0x02,
            0xD0, 0xA2,
            0xD0, 0xC2,
            0x70, 0x02,
            0xD0, 0x22,
            0xD0, 0x32,
            // Finish drawing the letter D

            0x70, 0x03,
            0xD0, 0xA2,
            0xD0, 0xB2,
            0xD0, 0xC2,
            0x70, 0x02,
            0xD0, 0x12,
            0xD0, 0x42,
            0x70, 0x02,
            0xD0, 0xA2,
            0xD0, 0xB2,
            0xD0, 0xC2,
            
            0x13, 0x6A, // Loop forever
        ];

        let mut f = std::fs::File::create("roms/my_logo.ch8").unwrap();
        f.write_all(&rom).unwrap();
    }
}
